// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String   @map("name")
  role      UserRole @default(APPLICANT) @map("role")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  resume Resume[] // 사용자(Users) 테이블과 이력서(Resumes) 테이블이 1:N 관계를 맺습니다.

  @@map("users")
}

model Resume {
  id           Int          @id @default(autoincrement())
  userId       Int          @map("user_id") // Users 테이블을 참조하는 외래키
  title        String
  introduction String       @db.Text
  status       ResumeStatus @default(APPLY)
  createdAt    DateTime     @default(now()) @map("created_at")
  updatedAt    DateTime     @updatedAt @map("updated_at")

  // Users 테이블과 관계를 설정합니다.
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("resumes")
}

enum UserRole {
  APPLICANT
  RECRUITER
}

enum ResumeStatus {
  APPLY
  DROP
  PASS
  INTERVIEW1
  INTERVIEW2
  FINAL_PASS
}
